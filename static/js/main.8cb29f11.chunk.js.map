{"version":3,"sources":["index.tsx","api/soundcloud.ts","components/Button.tsx","components/Heading.tsx","components/Paragraph.tsx","components/Spinner.tsx","components/Link.tsx","TracksView.tsx","LoginView.tsx","App.tsx"],"names":["App","require","default","ReactDOM","render","StrictMode","document","getElementById","authenticate","clientId","redirectUri","origin","a","Promise","resolve","reject","query","URLSearchParams","client_id","redirect_uri","response_type","scope","display","popup","window","open","toString","addEventListener","receiveToken","event","data","source","removeEventListener","close","token","params","get","tracks","oauth_token","linked_partitioning","limit","url","next","axios","push","collection","map","soundcloudTrackToInternal","next_href","track","dl","download_url","includes","title","download","styleFromType","type","Button","onClick","className","children","disabled","memo","Heading","Paragraph","Spinner","Link","external","href","target","rel","TracksView","useState","search","setSearch","sorted","filter","t","toLocaleLowerCase","sort","b","multiDownload","placeholder","value","onChange","e","i","LoginView","onAuthenticate","useEffect","ReactGA","initialize","process","debug","pageview","content","setToken","setTracks","loading","setLoading","error","setError","soundcloud","console"],"mappings":"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","file":"static/js/main.8cb29f11.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.dist.css\";\n\nconst render = () => {\n    const App = require(\"./App\").default;\n\n    ReactDOM.render(\n        <React.StrictMode>\n            <App/>\n        </React.StrictMode>,\n        document.getElementById(\"downcloud\")\n    );\n};\n\nrender();\n\nif (process.env.NODE_ENV === \"development\") {\n    if (module.hot) {\n        module.hot.accept(\"./App\", render);\n    }\n}\n","import axios from \"axios\";\nimport { Track } from \"../types\";\n\nconst apiUrl = \"https://api.soundcloud.com\";\n\nexport const authenticate = async (\n  clientId: string,\n  redirectUri: string,\n  origin: string\n): Promise<Token> => {\n  return new Promise<Token>((resolve, reject) => {\n    const query = new URLSearchParams({\n      client_id: clientId,\n      redirect_uri: redirectUri,\n      response_type: \"token\",\n      scope: \"non-expiring\",\n      display: \"popup\",\n    });\n\n    const popup = window.open(\n      `https://soundcloud.com/connect?${query.toString()}`,\n      \"soundcloud-auth-popup\",\n      \"width=400, height=600, location=yes, toolbar=no, scrollbars=yes\"\n    );\n\n    if (!popup) {\n      reject(\"Unable to create authentication popup.\");\n      return;\n    }\n\n    type AuthEvent = {\n      source: \"auth-callback\";\n      params: string;\n    };\n\n    window.addEventListener(\n      \"message\",\n      function receiveToken(event: MessageEvent<AuthEvent>) {\n        if (\n          event.origin !== origin ||\n          !event.data ||\n          !event.data.source ||\n          event.data.source !== \"auth-callback\"\n        ) {\n          return;\n        }\n\n        window.removeEventListener(\"message\", receiveToken, false);\n        popup.close();\n\n        const params = new URLSearchParams(event.data.params);\n        const token = params.get(\"access_token\");\n\n        if (!token) {\n          reject(\"No access token was passed back.\");\n          return;\n        }\n\n        resolve(token);\n      },\n      false\n    );\n  });\n};\n\nexport const tracks = async (token: Token): Promise<Track[]> => {\n  const query = new URLSearchParams({\n    oauth_token: token,\n    linked_partitioning: \"1\",\n    limit: \"200\",\n  });\n\n  const tracks: Track[] = [];\n  let next: string | undefined;\n  do {\n    let url = `${apiUrl}/me/tracks?${query.toString()}`;\n\n    if (next && next !== \"\") {\n      url = `${next}&oauth_token=${token}`;\n    }\n\n    const { data } = await axios.get<PaginatedResponse<SoundcloudTrack[]>>(url);\n    tracks.push(...data.collection.map(soundcloudTrackToInternal(token)));\n\n    next = data.next_href;\n  } while (!!next);\n\n  return tracks;\n};\n\ntype Token = string;\n\ninterface PaginatedResponse<T> {\n  collection: T;\n  next_href?: string;\n}\n\ninterface SoundcloudTrack {\n  id: number;\n  title: string;\n  download_url: string;\n}\n\nconst soundcloudTrackToInternal = (token: Token) => (\n  track: SoundcloudTrack\n): Track => {\n  let dl = track.download_url;\n\n  if (!dl.includes(\"?\")) {\n    dl = `${dl}?oauth_token=${token}`;\n  } else {\n    dl = `${dl}&oauth_token=${token}`;\n  }\n\n  return {\n    title: track.title,\n    download: dl,\n  };\n};\n","import React, { memo, ReactNode } from \"react\";\n\ntype Props = {\n  type?: \"plain\";\n  className?: string;\n  onClick: () => void;\n  children: ReactNode;\n  disabled?: boolean;\n};\n\nconst styleFromType = (type: \"plain\" | undefined): string => {\n  switch (type) {\n    case \"plain\":\n      return \"cursor-pointer font-bold no-underline text-purple-500 inline hover:underline\";\n\n    default:\n      return \"cursor-pointer p-3 rounded bg-purple-500 text-white\";\n  }\n};\n\nconst Button = ({\n  type,\n  onClick,\n  className,\n  children,\n  disabled = false,\n}: Props) => (\n  <button\n    className={`${styleFromType(type)} ${className}`}\n    onClick={onClick}\n    disabled={disabled}\n  >\n    {children}\n  </button>\n);\n\nexport default memo(Button);\n","import React, { memo, ReactNode } from \"react\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nconst Heading = ({ children }: Props) => (\n  <h1 className=\"text-xl mb-3\">{children}</h1>\n);\n\nexport default memo(Heading);\n","import React, { memo, ReactNode } from \"react\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nconst Paragraph = ({ children }: Props) => (\n  <p className=\"mb-3 leading-relaxed\">{children}</p>\n);\n\nexport default memo(Paragraph);\n","import React, { memo } from \"react\";\n\nconst Spinner = () => (\n  <span className=\"flex relative h-4 w-4\">\n    <span className=\"animate-ping absolute inline-flex h-full w-full bg-purple-500 rounded-full\" />\n  </span>\n);\n\nexport default memo(Spinner);\n","import React, { memo, ReactNode } from \"react\";\n\ntype Props = {\n  href: string;\n  external?: boolean;\n  children: ReactNode;\n};\n\nconst Link = ({ external = false, children, href }: Props) => {\n  let target = {};\n\n  if (external) {\n    target = {\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n    };\n  }\n\n  return (\n    <a\n      className=\"font-bold no-underline text-purple-500 cursor-pointer hover:underline\"\n      href={href}\n      {...target}\n    >\n      {children}\n    </a>\n  );\n};\n\nexport default memo(Link);\n","import React, { memo, useState } from \"react\";\nimport multiDownload from \"multi-download\";\n\nimport type { Track } from \"types\";\nimport { Button, Heading, Link, Paragraph } from \"components\";\n\ntype Props = {\n  tracks: Track[];\n};\n\nconst TracksView = ({ tracks }: Props) => {\n  const [search, setSearch] = useState(\"\");\n\n  const filtered = tracks.filter((t) =>\n    t.title.toLocaleLowerCase().includes(search.toLocaleLowerCase())\n  );\n\n  const sorted = filtered.sort((a, b) => {\n    if (a.title < b.title) {\n      return -1;\n    }\n\n    if (a.title > b.title) {\n      return 1;\n    }\n\n    return 0;\n  });\n\n  return (\n    <>\n      <Heading>Your tracks</Heading>\n\n      <Paragraph>Click on a track name to start downloading.</Paragraph>\n      <Paragraph>\n        If you're feeling lucky, you can try to{\" \"}\n        <Button\n          type=\"plain\"\n          onClick={() => multiDownload(tracks.map((t) => t.download))}\n        >\n          download all tracks at once\n        </Button>\n        . Please note that this feature is experimental and may not work! If\n        you're using Chrome, try disabling the option \"Ask where to save each\n        file before downloading\" if it's not working properly.\n      </Paragraph>\n\n      <input\n        type=\"text\"\n        className=\"mt-3 border border p-3 rounded focus:ring focus:ring-purple-500 w-full\"\n        placeholder=\"Filter by title...\"\n        value={search}\n        onChange={(e) => setSearch(e.target.value)}\n      />\n\n      <ul className=\"list-inside list-disc mt-6\">\n        {sorted.map((t, i) => (\n          <li key={i} className=\"mb-2\">\n            <Link href={t.download} external={true}>\n              {t.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default memo(TracksView);\n","import React, { memo } from \"react\";\nimport { Button, Heading, Paragraph } from \"components\";\n\ntype Props = {\n  onAuthenticate: () => void;\n};\n\nconst LoginView = ({ onAuthenticate }: Props) => (\n  <>\n    <Heading>Downcloud</Heading>\n    <Paragraph>\n      This app helps you download your own Souncloud tracks as original,\n      uncompressed files.\n    </Paragraph>\n    <Button onClick={onAuthenticate}>Sign in with Soundcloud</Button> to get\n    started\n  </>\n);\n\nexport default memo(LoginView);\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport ReactGA from \"react-ga\";\n\nimport type { Track } from \"types\";\nimport * as soundcloud from \"api/soundcloud\";\nimport { Link, Paragraph, Spinner } from \"components\";\nimport TracksView from \"./TracksView\";\nimport LoginView from \"./LoginView\";\n\nconst App = () => {\n  useEffect(() => {\n    ReactGA.initialize(process.env.REACT_APP_GA_ID || \"\", {\n      debug: process.env.NODE_ENV === \"development\",\n    });\n\n    ReactGA.pageview(\"/\");\n  }, []);\n\n  const [token, setToken] = useState(\"\");\n  const [tracks, setTracks] = useState<Track[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<any | null>(null);\n\n  let content: ReactElement;\n\n  if (loading) {\n    content = <Spinner />;\n  } else if (token === \"\") {\n    const onAuthenticate = async () => {\n      try {\n        setLoading(true);\n\n        const token = await soundcloud.authenticate(\n          process.env.REACT_APP_SC_CLIENT_ID || \"\",\n          process.env.REACT_APP_SC_REDIRECT_URI || \"\",\n          process.env.REACT_APP_URI || \"\"\n        );\n        setToken(token);\n\n        const tracks = await soundcloud.tracks(token);\n        setTracks(tracks);\n      } catch (err) {\n        console.error(err);\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    content = <LoginView onAuthenticate={onAuthenticate} />;\n  } else if (error !== null) {\n    content = <>An error occurred</>;\n  } else {\n    content = <TracksView tracks={tracks} />;\n  }\n\n  return (\n    <div className=\"container mx-auto max-w-2xl\">\n      <main className=\"py-6 px-12\">{content}</main>\n\n      <footer className=\"py-6 px-12 mt-6 bg-gray-100 md:rounded\">\n        <Paragraph>\n          <Link href=\"https://www.buymeacoffee.com/tomas\" external={true}>\n            Buy me a coffee?\n          </Link>\n        </Paragraph>\n\n        <Paragraph>\n          <Link href=\"https://soundcloud.com/autodrums\" external={true}>\n            @autodrums\n          </Link>{\" \"}\n          on Soundcloud\n          <br />\n          <Link href=\"https://github.com/tomasruud\" external={true}>\n            @tomasruud\n          </Link>{\" \"}\n          on Github\n        </Paragraph>\n\n        <Paragraph>\n          <Link\n            href=\"https://github.com/tomasruud/downcloud/issues\"\n            external={true}\n          >\n            Report issues\n          </Link>\n          <br />\n          <Link\n            href=\"https://github.com/tomasruud/downcloud/tree/master/changelog.md\"\n            external={true}\n          >\n            Changelog\n          </Link>\n          <br />\n          Version {process.env.REACT_APP_VERSION}\n        </Paragraph>\n      </footer>\n\n      <span className=\"text-gray-400 text-xs py-6 px-12 block\">\n          <Paragraph>\n            None of your data will be stored anywhere, everything is done in\n            your browser session and destroyed once you exit/refresh the site.\n          </Paragraph>\n          <Paragraph>\n            This site uses Google Analytics to analyze how the app is used,\n            which means that there will be a necessary cookie set for this.\n          </Paragraph>\n        </span>\n    </div>\n  );\n};\n\nexport default App;\n"],"sourceRoot":""}